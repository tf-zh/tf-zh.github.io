"use strict";(self.webpackChunktensorflow_model=self.webpackChunktensorflow_model||[]).push([[289],{66435:function(d,s,n){n.r(s);var o=n(755),u=n(65508),h=n(13048),p=n(95944),c=n(52157),t=n(17492),m=n(45421),x=n(13948),a=n(9014),i=n(70896),l=n(75271),_=n(29062),e=n(52676);function r(){return(0,e.jsx)(a.dY,{children:(0,e.jsx)(l.Suspense,{fallback:(0,e.jsx)(i.Z,{}),children:(0,e.jsx)(e.Fragment,{children:(0,e.jsxs)("div",{className:"markdown",children:[(0,e.jsxs)("h1",{id:"\u8BBE\u7F6E",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#\u8BBE\u7F6E",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"\u8BBE\u7F6E"]}),(0,e.jsxs)("h2",{id:"\u6D4F\u89C8\u5668\u8BBE\u7F6E",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#\u6D4F\u89C8\u5668\u8BBE\u7F6E",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"\u6D4F\u89C8\u5668\u8BBE\u7F6E"]}),(0,e.jsx)("p",{children:_.texts[0].value}),(0,e.jsxs)("ol",{children:[(0,e.jsx)("li",{children:_.texts[1].value}),(0,e.jsx)("li",{children:_.texts[2].value})]}),(0,e.jsx)("p",{children:_.texts[3].value}),(0,e.jsxs)("h3",{id:"1-\u4F7F\u7528\u811A\u672C\u4EE3\u7801",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#1-\u4F7F\u7528\u811A\u672C\u4EE3\u7801",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"1. \u4F7F\u7528\u811A\u672C\u4EE3\u7801"]}),(0,e.jsx)("p",{children:_.texts[4].value}),(0,e.jsx)(t.Z,{lang:"html",children:_.texts[5].value}),(0,e.jsx)("p",{children:_.texts[6].value}),(0,e.jsx)(t.Z,{lang:"js",children:_.texts[7].value}),(0,e.jsxs)("h3",{id:"2-\u4ECE-npm-\u5B89\u88C5",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#2-\u4ECE-npm-\u5B89\u88C5",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"2. \u4ECE NPM \u5B89\u88C5"]}),(0,e.jsx)("p",{children:_.texts[8].value}),(0,e.jsx)(t.Z,{lang:"bash",children:_.texts[9].value}),(0,e.jsx)("p",{children:_.texts[10].value}),(0,e.jsx)(t.Z,{lang:"js",children:_.texts[11].value}),(0,e.jsxs)("h2",{id:"nodejs-\u8BBE\u7F6E",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#nodejs-\u8BBE\u7F6E",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"Node.js \u8BBE\u7F6E"]}),(0,e.jsx)("p",{children:_.texts[12].value}),(0,e.jsx)("p",{children:_.texts[13].value}),(0,e.jsx)(t.Z,{lang:"bash",children:_.texts[14].value}),(0,e.jsx)("p",{children:_.texts[15].value}),(0,e.jsx)(t.Z,{lang:"bash",children:_.texts[16].value}),(0,e.jsx)("p",{children:_.texts[17].value}),(0,e.jsx)(t.Z,{lang:"bash",children:_.texts[18].value}),(0,e.jsx)("p",{children:_.texts[19].value}),(0,e.jsx)(t.Z,{lang:"js",children:_.texts[20].value}),(0,e.jsxs)("h2",{id:"typescript",children:[(0,e.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#typescript",children:(0,e.jsx)("span",{className:"icon icon-link"})}),"TypeScript"]}),(0,e.jsx)("p",{children:_.texts[21].value})]})})})})}s.default=r},29062:function(d,s,n){n.r(s),n.d(s,{texts:function(){return o}});const o=[{value:"\u60A8\u53EF\u4EE5\u901A\u8FC7\u4E24\u79CD\u4E3B\u8981\u65B9\u5F0F\u5728\u6D4F\u89C8\u5668\u9879\u76EE\u4E2D\u83B7\u53D6 TensorFlow.js\uFF1A",paraId:0,tocIndex:1},{value:"\u4F7F\u7528\u811A\u672C\u4EE3\u7801\u3002",paraId:1,tocIndex:1},{value:"\u4ECE NPM \u5B89\u88C5\u5E76\u4F7F\u7528\u8BF8\u5982 Parcel\u3001WebPack \u6216 Rollup \u7684\u6784\u5EFA\u5DE5\u5177\u3002",paraId:1,tocIndex:1},{value:"\u5982\u679C\u60A8\u662F Web \u5F00\u53D1\u65B0\u624B\uFF0C\u6216\u8005\u4ECE\u672A\u542C\u8BF4\u8FC7\u8BF8\u5982 Webpack \u6216 Parcel \u7684\u5DE5\u5177\uFF0C\u5EFA\u8BAE\u60A8\u4F7F\u7528\u811A\u672C\u4EE3\u7801\u3002\u5982\u679C\u60A8\u6BD4\u8F83\u6709\u7ECF\u9A8C\u6216\u60F3\u7F16\u5199\u66F4\u5927\u7684\u7A0B\u5E8F\uFF0C\u5219\u6700\u597D\u4F7F\u7528\u6784\u5EFA\u5DE5\u5177\u8FDB\u884C\u63A2\u7D22\u3002",paraId:2,tocIndex:1},{value:"\u5C06\u4EE5\u4E0B\u811A\u672C\u4EE3\u7801\u6DFB\u52A0\u5230\u60A8\u7684\u4E3B HTML \u6587\u4EF6\u4E2D\u3002",paraId:3,tocIndex:2},{value:`<script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@2.0.0/dist/tf.min.js"><\/script>
`,paraId:4,tocIndex:2},{value:"\u8BF7\u53C2\u89C1\u4EE3\u7801\u793A\u4F8B\u4E86\u89E3\u811A\u672C\u4EE3\u7801\u8BBE\u7F6E",paraId:5,tocIndex:2},{value:`  // Define a model for linear regression. 
  // const model = tf.sequential(); model.add(tf.layers.dense({units: 1, inputShape: [1]}));

model.compile({loss: 'meanSquaredError', optimizer: 'sgd'});

// Generate some synthetic data for training. const xs = tf.tensor2d([1, 2, 3, 4], [4, 1]); const ys = tf.tensor2d([1, 3, 5, 7], [4, 1]);

// Train the model using the data. model.fit(xs, ys, {epochs: 10}).then(() => { // Use the model to do inference on a data point the model hasn't seen before: model.predict(tf.tensor2d([5], [1, 1])).print(); // Open the browser devtools to see the output });
`,paraId:6,tocIndex:2},{value:"\u60A8\u53EF\u4EE5\u4F7F\u7528 npm cli \u5DE5\u5177\u6216 yarn \u5B89\u88C5 TensorFlow.js\u3002",paraId:7,tocIndex:3},{value:`yarn add @tensorflow/tfjs
# \u6216
npm install @tensorflow/tfjs
`,paraId:8,tocIndex:3},{value:"\u8BF7\u53C2\u89C1\u793A\u4F8B\u4EE3\u7801\u4EE5\u901A\u8FC7 NPM \u5B89\u88C5",paraId:9,tocIndex:3},{value:`import * as tf from '@tensorflow/tfjs';
// Define a model for linear regression. const model = tf.sequential(); model.add(tf.layers.dense({units: 1, inputShape: [1]}));

model.compile({loss: 'meanSquaredError', optimizer: 'sgd'});

// Generate some synthetic data for training. const xs = tf.tensor2d([1, 2, 3, 4], [4, 1]); const ys = tf.tensor2d([1, 3, 5, 7], [4, 1]);

// Train the model using the data. model.fit(xs, ys, {epochs: 10}).then(() => { // Use the model to do inference on a data point the model hasn't seen before: model.predict(tf.tensor2d([5], [1, 1])).print(); // Open the browser devtools to see the output });
`,paraId:10,tocIndex:3},{value:"\u60A8\u53EF\u4EE5\u4F7F\u7528 npm cli \u5DE5\u5177\u6216 yarn \u5B89\u88C5 TensorFlow.js\u3002",paraId:11,tocIndex:4},{value:"\u9009\u9879 1\uFF1A\u4F7F\u7528\u539F\u751F C++ \u7ED1\u5B9A\u5B89\u88C5 TensorFlow.js\u3002",paraId:12,tocIndex:4},{value:`yarn add @tensorflow/tfjs-node
# \u6216
npm install @tensorflow/tfjs-node
`,paraId:13,tocIndex:4},{value:"\u9009\u9879 2\uFF1A\uFF08\u4EC5\u9650 Linux\uFF09\u5982\u679C\u60A8\u7684\u7CFB\u7EDF\u642D\u8F7D\u5177\u5907 CUDA \u652F\u6301\u7684 NVIDIA\xAE GPU\uFF0C\u8BF7\u4F7F\u7528 GPU \u8F6F\u4EF6\u5305\u4EE5\u83B7\u5F97\u66F4\u9AD8\u6027\u80FD\u3002",paraId:14,tocIndex:4},{value:`yarn add @tensorflow/tfjs-node-gpu
# \u6216
npm install @tensorflow/tfjs-node-gpu
`,paraId:15,tocIndex:4},{value:"\u9009\u9879 3\uFF1A\u5B89\u88C5\u7EAF\u51C0\u7248 JavaScript\u3002\u8FD9\u662F\u6027\u80FD\u6700\u6162\u7684\u9009\u9879\u3002",paraId:16,tocIndex:4},{value:`yarn add @tensorflow/tfjs
# \u6216
npm install @tensorflow/tfjs
`,paraId:17,tocIndex:4},{value:"\u8BF7\u53C2\u89C1\u793A\u4F8B\u4EE3\u7801\u4EE5\u4E86\u89E3 Node.js \u7528\u6CD5",paraId:18,tocIndex:4},{value:`// Optional Load the binding: // Use '@tensorflow/tfjs-node-gpu' if running with GPU. require('@tensorflow/tfjs-node');

// Train a simple model: const model = tf.sequential(); model.add(tf.layers.dense({units: 100, activation: 'relu', inputShape: [10]})); model.add(tf.layers.dense({units: 1, activation: 'linear'})); model.compile({optimizer: 'sgd', loss: 'meanSquaredError'});

const xs = tf.randomNormal([100, 10]); const ys = tf.randomNormal([100, 1]);

model.fit(xs, ys, { epochs: 100, callbacks: { onEpochEnd: (epoch, log) => console.log(Epoch \${epoch}: loss = \${log.loss}) } });
`,paraId:19,tocIndex:4},{value:"\u4F7F\u7528 TypeScript \u65F6\uFF0C\u5982\u679C\u60A8\u7684\u9879\u76EE\u4F7F\u7528\u4E25\u683C\u7684 null \u68C0\u67E5\uFF0C\u5219\u53EF\u80FD\u9700\u8981\u5728 tsconfig.json \u6587\u4EF6\u4E2D\u8BBE\u7F6E skipLibCheck: true\uFF0C\u5426\u5219\u5728\u7F16\u8BD1\u8FC7\u7A0B\u4E2D\u4F1A\u9047\u5230\u9519\u8BEF\u3002",paraId:20,tocIndex:5}]}}]);
